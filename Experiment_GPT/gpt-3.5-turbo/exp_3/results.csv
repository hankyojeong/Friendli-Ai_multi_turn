question_no,question,sys_prompt_no,output,llm_answer,정답유무
1_1,2025년 4월 기준 국내 단기 체류 외국인 수는?,3,"total_cnt
""""","```python
import sqlite3
import pandas as pd

# [S1] PRELUDE (payload 값 그대로; placeholder 금지)
FILE = r""1_국내체류외국인.xlsx""
TBL_RAW = ""1_tb_resident_foreigners""
Q_TBL   = '""' + TBL_RAW + '""'

# [S2] LOAD
import os
if not os.path.isabs(FILE) and not os.path.exists(FILE):
    for _p in [FILE, os.path.join(""data"", FILE), os.path.join("".."",""data"",FILE),
               os.path.join("".."", FILE), os.path.join("".."","".."",""data"",FILE)]:
        if os.path.exists(_p):
            FILE = _p; break

def _try_read(p):
    lo = p.lower()
    if lo.endswith(("".xlsx"","".xls"")):
        try: return pd.read_excel(p)
        except Exception:
            csvp = os.path.splitext(p)[0]+"".csv""
            if os.path.exists(csvp):
                return pd.read_csv(csvp, encoding=""utf-8-sig"", low_memory=False)
            raise
    return pd.read_csv(p, encoding=""utf-8-sig"", low_memory=False)

df = _try_read(FILE)
con = sqlite3.connect("":memory:"")
df.to_sql(TBL_RAW, con, index=False)

# [S3] SQL —— 반드시 2단계(지연 포맷)
sql_template = '''
SELECT SUM(cnt) as total_cnt
FROM {Q_TBL}
WHERE category = '단기체류' and p_year = 2025 and p_month = 4
'''
sql = sql_template.format(Q_TBL=Q_TBL)

out = pd.read_sql_query(sql, con)
print(out.to_csv(index=False))
```  ",
1_2,2023년 7월 기준 국내 단기 체류 외국인 수는?,3,"cnt
652095","```python
import sqlite3
import pandas as pd

# [S1] PRELUDE (payload 값 그대로; placeholder 금지)
FILE = r""1_국내체류외국인.xlsx""
TBL_RAW = ""1_tb_resident_foreigners""
Q_TBL   = '""' + TBL_RAW + '""'

# [S2] LOAD
import os
if not os.path.isabs(FILE) and not os.path.exists(FILE):
    for _p in [FILE, os.path.join(""data"", FILE), os.path.join("".."",""data"",FILE),
               os.path.join("".."", FILE), os.path.join("".."","".."",""data"",FILE)]:
        if os.path.exists(_p):
            FILE = _p; break

def _try_read(p):
    lo = p.lower()
    if lo.endswith(("".xlsx"","".xls"")):
        try: return pd.read_excel(p)
        except Exception:
            csvp = os.path.splitext(p)[0]+"".csv""
            if os.path.exists(csvp):
                return pd.read_csv(csvp, encoding=""utf-8-sig"", low_memory=False)
            raise
    return pd.read_csv(p, encoding=""utf-8-sig"", low_memory=False)

df = _try_read(FILE)
con = sqlite3.connect("":memory:"")
df.to_sql(TBL_RAW, con, index=False)

# [S3] SQL —— 반드시 2단계(지연 포맷)
sql_template = '''
SELECT SUM(cnt) as cnt
FROM {Q_TBL}
WHERE p_year=2023 AND p_month=7 AND category='단기체류'
'''
sql = sql_template.format(Q_TBL=Q_TBL)

out = pd.read_sql_query(sql, con)
print(out.to_csv(index=False))
```",
1_3,2024년 이후 월별 장기체류 외국인수 추이는?,3,"p_year,p_month,cnt
2024,1,1893911
2024,2,1891853
2024,3,1912870
2024,4,1933874
2024,5,1953619
2024,6,1966820
2024,7,1982246
2024,8,1986270
2024,9,2009960
2024,10,2033177
2024,11,2042013
2024,12,2042017
2025,1,2042236","```python
import sqlite3
import pandas as pd

# [S1] PRELUDE (payload 값 그대로; placeholder 금지)
FILE = r""1_국내체류외국인.xlsx""
TBL_RAW = ""1_tb_resident_foreigners""
Q_TBL   = '""' + TBL_RAW + '""'

# [S2] LOAD
import os
if not os.path.isabs(FILE) and not os.path.exists(FILE):
    for _p in [FILE, os.path.join(""data"", FILE), os.path.join("".."",""data"",FILE),
               os.path.join("".."", FILE), os.path.join("".."","".."",""data"",FILE)]:
        if os.path.exists(_p):
            FILE = _p; break

def _try_read(p):
    lo = p.lower()
    if lo.endswith(("".xlsx"","".xls"")):
        try: return pd.read_excel(p)
        except Exception:
            csvp = os.path.splitext(p)[0]+"".csv""
            if os.path.exists(csvp):
                return pd.read_csv(csvp, encoding=""utf-8-sig"", low_memory=False)
            raise
    return pd.read_csv(p, encoding=""utf-8-sig"", low_memory=False)

df = _try_read(FILE)
con = sqlite3.connect("":memory:"")
df.to_sql(TBL_RAW, con, index=False)

# [S3] SQL —— 반드시 2단계(지연 포맷)
sql_template = '''
SELECT p_year, p_month, SUM(cnt) as cnt
FROM {Q_TBL}
WHERE category IN ('장기체류거소', '장기체류등록')
AND p_year >= 2024
GROUP BY p_year, p_month
ORDER BY p_year, p_month
'''
sql = sql_template.format(Q_TBL=Q_TBL)

out = pd.read_sql_query(sql, con)
print(out.to_csv(index=False))
```",
1_4,2023년 월별 장기체류 외국인수 추이는?,3,"p_month,total_foreigners
1,1694876
2,1698798
3,1724809
4,1743811
5,1766131
6,1785522
7,1801477
8,1812929
9,1838652
10,1858699
11,1874103
12,1881921","```python
import sqlite3
import pandas as pd

# [S1] PRELUDE (payload 값 그대로; placeholder 금지)
FILE = r""1_국내체류외국인.xlsx""
TBL_RAW = ""1_tb_resident_foreigners""
Q_TBL   = '""' + TBL_RAW + '""'

# [S2] LOAD
import os
if not os.path.isabs(FILE) and not os.path.exists(FILE):
    for _p in [FILE, os.path.join(""data"", FILE), os.path.join("".."",""data"",FILE),
               os.path.join("".."", FILE), os.path.join("".."","".."",""data"",FILE)]:
        if os.path.exists(_p):
            FILE = _p; break

def _try_read(p):
    lo = p.lower()
    if lo.endswith(("".xlsx"","".xls"")):
        try: return pd.read_excel(p)
        except Exception:
            csvp = os.path.splitext(p)[0]+"".csv""
            if os.path.exists(csvp):
                return pd.read_csv(csvp, encoding=""utf-8-sig"", low_memory=False)
            raise
    return pd.read_csv(p, encoding=""utf-8-sig"", low_memory=False)

df = _try_read(FILE)
con = sqlite3.connect("":memory:"")
df.to_sql(TBL_RAW, con, index=False)

# [S3] SQL —— 반드시 2단계(지연 포맷)
sql_template = '''
SELECT p_month, SUM(cnt) as total_foreigners
FROM {Q_TBL}
WHERE category IN ('장기체류거소', '장기체류등록')
AND p_year = 2023
GROUP BY p_month
'''
sql = sql_template.format(Q_TBL=Q_TBL)

out = pd.read_sql_query(sql, con)
print(out.to_csv(index=False))
```",
1_5,2023~2025년 3년간 3월 장기체류 외국인 수와 전년 대비 증감률은?,3,"p_year,category,cnt
2023,장기체류거소,503124
2023,장기체류등록,1221685
2024,장기체류거소,538598
2024,장기체류등록,1374272","```python
import sqlite3
import pandas as pd

# [S1] PRELUDE (payload 값 그대로; placeholder 금지)
FILE = r""1_국내체류외국인.xlsx""
TBL_RAW = ""1_tb_resident_foreigners""
Q_TBL   = '""' + TBL_RAW + '""'

# [S2] LOAD
import os
if not os.path.isabs(FILE) and not os.path.exists(FILE):
    for _p in [FILE, os.path.join(""data"", FILE), os.path.join("".."",""data"",FILE),
               os.path.join("".."", FILE), os.path.join("".."","".."",""data"",FILE)]:
        if os.path.exists(_p):
            FILE = _p; break

def _try_read(p):
    lo = p.lower()
    if lo.endswith(("".xlsx"","".xls"")):
        try: return pd.read_excel(p)
        except Exception:
            csvp = os.path.splitext(p)[0]+"".csv""
            if os.path.exists(csvp):
                return pd.read_csv(csvp, encoding=""utf-8-sig"", low_memory=False)
            raise
    return pd.read_csv(p, encoding=""utf-8-sig"", low_memory=False)

df = _try_read(FILE)
con = sqlite3.connect("":memory:"")
df.to_sql(TBL_RAW, con, index=False)

# [S3] SQL —— 반드시 2단계(지연 포맷)
sql_template = '''
SELECT p_year, category, cnt
FROM {Q_TBL}
WHERE category IN ('장기체류거소', '장기체류등록') AND p_month = 3 AND p_year BETWEEN 2023 AND 2025
ORDER BY p_year
'''
sql = sql_template.format(Q_TBL=Q_TBL)

out = pd.read_sql_query(sql, con)
print(out.to_csv(index=False))
```",
1_6,2023~2025년 3년간 1월 장기체류 외국인 수와 전년 대비 증감률은?,3,"p_year,category,total_cnt
2023,장기체류거소,499625
2023,장기체류등록,1195251
2024,장기체류거소,535788
2024,장기체류등록,1358123
2025,장기체류거소,553309
2025,장기체류등록,1488927","```python
import sqlite3
import pandas as pd

# [S1] PRELUDE (payload 값 그대로; placeholder 금지)
FILE = r""1_국내체류외국인.xlsx""
TBL_RAW = ""1_tb_resident_foreigners""
Q_TBL   = '""' + TBL_RAW + '""'

# [S2] LOAD
import os
if not os.path.isabs(FILE) and not os.path.exists(FILE):
    for _p in [FILE, os.path.join(""data"", FILE), os.path.join("".."",""data"",FILE),
               os.path.join("".."", FILE), os.path.join("".."","".."",""data"",FILE)]:
        if os.path.exists(_p):
            FILE = _p; break

def _try_read(p):
    lo = p.lower()
    if lo.endswith(("".xlsx"","".xls"")):
        try: return pd.read_excel(p)
        except Exception:
            csvp = os.path.splitext(p)[0]+"".csv""
            if os.path.exists(csvp):
                return pd.read_csv(csvp, encoding=""utf-8-sig"", low_memory=False)
            raise
    return pd.read_csv(p, encoding=""utf-8-sig"", low_memory=False)

df = _try_read(FILE)
con = sqlite3.connect("":memory:"")
df.to_sql(TBL_RAW, con, index=False)

# [S3] SQL —— 반드시 2단계(지연 포맷)
sql_template = '''
SELECT p_year, category, SUM(cnt) as total_cnt
FROM {Q_TBL}
WHERE category IN ('장기체류거소', '장기체류등록')
  AND p_month = 1
  AND p_year BETWEEN 2023 AND 2025
GROUP BY p_year, category
'''
sql = sql_template.format(Q_TBL=Q_TBL)

out = pd.read_sql_query(sql, con)
print(out.to_csv(index=False))
```",
2_1,2025년 4월 경기 화성시의 장기체류 외국인 연령대 분포?,3,"age,cnt","```python
import sqlite3
import pandas as pd

# [S1] PRELUDE (payload 값 그대로; placeholder 금지)
FILE = r""2_장기체류외국인_지역별_현황.csv""
TBL_RAW = ""2_tb_long_term_foreigners_by_region""
Q_TBL   = '""' + TBL_RAW + '""'

# [S2] LOAD
import os
if not os.path.isabs(FILE) and not os.path.exists(FILE):
    for _p in [FILE, os.path.join(""data"", FILE), os.path.join("".."",""data"",FILE),
               os.path.join("".."", FILE), os.path.join("".."","".."",""data"",FILE)]:
        if os.path.exists(_p):
            FILE = _p; break

def _try_read(p):
    lo = p.lower()
    if lo.endswith(("".xlsx"","".xls"")):
        try: return pd.read_excel(p)
        except Exception:
            csvp = os.path.splitext(p)[0]+"".csv""
            if os.path.exists(csvp):
                return pd.read_csv(csvp, encoding=""utf-8-sig"", low_memory=False)
            raise
    return pd.read_csv(p, encoding=""utf-8-sig"", low_memory=False)

df = _try_read(FILE)
con = sqlite3.connect("":memory:"")
df.to_sql(TBL_RAW, con, index=False)

# [S3] SQL —— 반드시 2단계(지연 포맷)
sql_template = '''
SELECT age,
       SUM(cnt) AS cnt
FROM {Q_TBL}
WHERE sido IN ('경기도', '경기')
      AND sigungu IN ('화성시', '화성')
      AND base_ym = '202504'
GROUP BY age
'''
sql = sql_template.format(Q_TBL=Q_TBL)

out = pd.read_sql_query(sql, con)
print(out.to_csv(index=False))
```",
3_1,(E-9)국내 외국인 근로자의 월별 추이는?,3,"base_ym,total_foreign_workers
202203,161921
202206,163886
202209,181247
202212,203121
202303,211361
202306,225307
202309,237846
202312,247191
202403,260047
202406,260073
202409,267452
202412,271925
202503,273139","```python
import sqlite3
import pandas as pd

# [S1] PRELUDE (payload 값 그대로; placeholder 금지)
FILE = r""3_외국인근로자.xlsx""
TBL_RAW = ""3_tb_foreign_workers_permit""
Q_TBL   = '""' + TBL_RAW + '""'

# [S2] LOAD
import os
if not os.path.isabs(FILE) and not os.path.exists(FILE):
    for _p in [FILE, os.path.join(""data"", FILE), os.path.join("".."",""data"",FILE),
               os.path.join("".."", FILE), os.path.join("".."","".."",""data"",FILE)]:
        if os.path.exists(_p):
            FILE = _p; break

def _try_read(p):
    lo = p.lower()
    if lo.endswith(("".xlsx"","".xls"")):
        try: return pd.read_excel(p)
        except Exception:
            csvp = os.path.splitext(p)[0]+"".csv""
            if os.path.exists(csvp):
                return pd.read_csv(csvp, encoding=""utf-8-sig"", low_memory=False)
            raise
    return pd.read_csv(p, encoding=""utf-8-sig"", low_memory=False)

df = _try_read(FILE)
con = sqlite3.connect("":memory:"")
df.to_sql(TBL_RAW, con, index=False)

# [S3] SQL —— 반드시 2단계(지연 포맷)
sql_template = '''
SELECT base_ym, SUM(cnt) as total_foreign_workers
FROM {Q_TBL}
GROUP BY base_ym
ORDER BY base_ym
'''
sql = sql_template.format(Q_TBL=Q_TBL)

out = pd.read_sql_query(sql, con)
print(out.to_csv(index=False))
```",
